// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyPhatTu_API.DataContext;

#nullable disable

namespace QuanLyPhatTu_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231012173740_addv7")]
    partial class addv7
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.BaiViet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnhBaiViet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<int>("LoaiBaiVietId")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NguoiDuyetBaiId")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhatTuId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuotBinhLuan")
                        .HasColumnType("int");

                    b.Property<int>("SoLuotThich")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThoiGianCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianDang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThaiBaiVietId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoaiBaiVietId");

                    b.HasIndex("PhatTuId");

                    b.HasIndex("TrangThaiBaiVietId");

                    b.ToTable("BaiViet_tbl");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.BinhLuanBaiViet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaiVietId")
                        .HasColumnType("int");

                    b.Property<string>("BinhLuan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<int>("PhatTuId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuotThich")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianXoa")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BaiVietId");

                    b.HasIndex("PhatTuId");

                    b.ToTable("BinhLuanBaiViet_tbl");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.Chua", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayThanhLap")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiTruTri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Chua_tbl");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.DaoTrang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("DaKetThuc")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NguoiTruTri")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiToChuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoThanhVienThamGia")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DaoTrang_tbl");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.DonDangKy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DaoTrangId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayGuiDon")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXuLy")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiXuLy")
                        .HasColumnType("int");

                    b.Property<int>("PhatTuId")
                        .HasColumnType("int");

                    b.Property<int>("TrangThaiDonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DaoTrangId");

                    b.HasIndex("PhatTuId");

                    b.HasIndex("TrangThaiDonId");

                    b.ToTable("DonDangKy_tbl");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.LoaiBaiViet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiBaiViet_tbl");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.NguoiDungThichBaiViet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaiVietId")
                        .HasColumnType("int");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<int>("PhatTuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianThich")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BaiVietId");

                    b.HasIndex("PhatTuId");

                    b.ToTable("NguoiDungThichBaiViet_tbl");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.NguoiDungThichBinhLuanBaiViet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BinhLuanBaiVietId")
                        .HasColumnType("int");

                    b.Property<bool>("DaXoa")
                        .HasColumnType("bit");

                    b.Property<int>("PhatTuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianThich")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BinhLuanBaiVietId");

                    b.HasIndex("PhatTuId");

                    b.ToTable("NguoiDungThichBinhLuanBaiViet_tbl");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.PhatTu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnhChup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChuaId")
                        .HasColumnType("int");

                    b.Property<bool?>("DaHoanTuc")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("LaThanhVienThamGiaDaoTrang")
                        .HasColumnType("bit");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXuatGia")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhapDanh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuyenHanId")
                        .HasColumnType("int");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChuaId");

                    b.HasIndex("QuyenHanId");

                    b.ToTable("PhatTu_tbl");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.PhatTuDaoTrang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("DaThamGia")
                        .HasColumnType("bit");

                    b.Property<int>("DaoTrangId")
                        .HasColumnType("int");

                    b.Property<string>("LyDoKhongThamGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhatTuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DaoTrangId");

                    b.HasIndex("PhatTuId");

                    b.ToTable("PhatTuDaoTrang_tbl");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.QuyenHan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenQuyenHan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QuyenHan_tbl");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PhatTuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianHetHan")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PhatTuId");

                    b.ToTable("RefreshToken_tbl");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.TrangThaiBaiViet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenTrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrangThaiBaiViet_tbl");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.TrangThaiDon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenTrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrangThaiDon_tbl");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.XacNhanEmail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("DaXacNhan")
                        .HasColumnType("bit");

                    b.Property<string>("MaXacNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhatTuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianHetHan")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PhatTuId");

                    b.ToTable("XacNhanEmail_tbl");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.BaiViet", b =>
                {
                    b.HasOne("QuanLyPhatTu_API.Entities.LoaiBaiViet", "LoaiBaiViet")
                        .WithMany("BaiViets")
                        .HasForeignKey("LoaiBaiVietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyPhatTu_API.Entities.PhatTu", "PhatTu")
                        .WithMany()
                        .HasForeignKey("PhatTuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyPhatTu_API.Entities.TrangThaiBaiViet", "TrangThaiBaiViet")
                        .WithMany()
                        .HasForeignKey("TrangThaiBaiVietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiBaiViet");

                    b.Navigation("PhatTu");

                    b.Navigation("TrangThaiBaiViet");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.BinhLuanBaiViet", b =>
                {
                    b.HasOne("QuanLyPhatTu_API.Entities.BaiViet", "BaiViet")
                        .WithMany("BinhLuanBaiViets")
                        .HasForeignKey("BaiVietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyPhatTu_API.Entities.PhatTu", "PhatTu")
                        .WithMany()
                        .HasForeignKey("PhatTuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaiViet");

                    b.Navigation("PhatTu");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.DonDangKy", b =>
                {
                    b.HasOne("QuanLyPhatTu_API.Entities.DaoTrang", "DaoTrang")
                        .WithMany("DonDangKies")
                        .HasForeignKey("DaoTrangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyPhatTu_API.Entities.PhatTu", "PhatTu")
                        .WithMany("DonDangKies")
                        .HasForeignKey("PhatTuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyPhatTu_API.Entities.TrangThaiDon", "TrangThaiDon")
                        .WithMany("DonDangKies")
                        .HasForeignKey("TrangThaiDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DaoTrang");

                    b.Navigation("PhatTu");

                    b.Navigation("TrangThaiDon");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.NguoiDungThichBaiViet", b =>
                {
                    b.HasOne("QuanLyPhatTu_API.Entities.BaiViet", "BaiViet")
                        .WithMany("NguoiDungThichBaiViets")
                        .HasForeignKey("BaiVietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyPhatTu_API.Entities.PhatTu", "PhatTu")
                        .WithMany()
                        .HasForeignKey("PhatTuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaiViet");

                    b.Navigation("PhatTu");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.NguoiDungThichBinhLuanBaiViet", b =>
                {
                    b.HasOne("QuanLyPhatTu_API.Entities.BinhLuanBaiViet", "BinhLuanBaiViet")
                        .WithMany("NguoiDungThichBinhLuanBaiViets")
                        .HasForeignKey("BinhLuanBaiVietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyPhatTu_API.Entities.PhatTu", "PhatTu")
                        .WithMany()
                        .HasForeignKey("PhatTuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BinhLuanBaiViet");

                    b.Navigation("PhatTu");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.PhatTu", b =>
                {
                    b.HasOne("QuanLyPhatTu_API.Entities.Chua", "Chua")
                        .WithMany("PhatTus")
                        .HasForeignKey("ChuaId");

                    b.HasOne("QuanLyPhatTu_API.Entities.QuyenHan", "QuyenHan")
                        .WithMany("PhatTus")
                        .HasForeignKey("QuyenHanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chua");

                    b.Navigation("QuyenHan");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.PhatTuDaoTrang", b =>
                {
                    b.HasOne("QuanLyPhatTu_API.Entities.DaoTrang", "DaoTrang")
                        .WithMany("PhatTuDaoTrangs")
                        .HasForeignKey("DaoTrangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyPhatTu_API.Entities.PhatTu", "PhatTu")
                        .WithMany("PhatTuDaoTrangs")
                        .HasForeignKey("PhatTuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DaoTrang");

                    b.Navigation("PhatTu");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.RefreshToken", b =>
                {
                    b.HasOne("QuanLyPhatTu_API.Entities.PhatTu", "PhatTu")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("PhatTuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhatTu");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.XacNhanEmail", b =>
                {
                    b.HasOne("QuanLyPhatTu_API.Entities.PhatTu", "PhatTu")
                        .WithMany()
                        .HasForeignKey("PhatTuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhatTu");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.BaiViet", b =>
                {
                    b.Navigation("BinhLuanBaiViets");

                    b.Navigation("NguoiDungThichBaiViets");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.BinhLuanBaiViet", b =>
                {
                    b.Navigation("NguoiDungThichBinhLuanBaiViets");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.Chua", b =>
                {
                    b.Navigation("PhatTus");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.DaoTrang", b =>
                {
                    b.Navigation("DonDangKies");

                    b.Navigation("PhatTuDaoTrangs");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.LoaiBaiViet", b =>
                {
                    b.Navigation("BaiViets");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.PhatTu", b =>
                {
                    b.Navigation("DonDangKies");

                    b.Navigation("PhatTuDaoTrangs");

                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.QuyenHan", b =>
                {
                    b.Navigation("PhatTus");
                });

            modelBuilder.Entity("QuanLyPhatTu_API.Entities.TrangThaiDon", b =>
                {
                    b.Navigation("DonDangKies");
                });
#pragma warning restore 612, 618
        }
    }
}
